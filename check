#!/bin/sh -eu
test -x ./fizzy
PATH=.:$PATH

TStable() {
	stdin=$(cat)

	echo "T $@" | tee cmdline

	printf %s "$stdin" >input

	printf %s "$stdin" |
	OMP_NUM_THREADS=1 fizzy -f "$@" >got ||
	return 1

	printf %s "$stdin" |
	grep '^[0-9]' |
	sort >expected

	diff -yB expected got
}

T() {
	stdin2=$(cat)
	printf %s "$stdin2" | TStable "$@"
	printf '%s\n' "$stdin2" | tac | TStable "$@"
}

esc=$(printf '\x1b')

# T works fine.
! printf -- '-\tT works fine' | T
printf '0\tT works fine' | T

# Record separator appended to output.
test "$(echo a)" = "$(printf a | fizzy -1)"

# Not fails.
printf '0\taaa' | T
# Empty fails.
! printf '' | T

# `find` works.
fizzy -f -qfizzy

T -qx <<"EOF"
0	xxxxx
1	xxxxxxxxxx
EOF

T -qabcd <<"EOF"
0	./yyy/ABCD.xx
1	./xxxxxxx.abcd
EOF

T -qa <<"EOF"
0	/abxcCdxx/AbxcCdxx
1	/abxcCdxx/XxXXDxxx
EOF
T -qab <<"EOF"
0	/abxcCdxx/AbxcCdxx
1	/abxcCdxx/XxXXDxxx
EOF
T -qabc <<"EOF"
0	/abxcCdxx/AbxcCdxx
1	/abxcCdxx/XxXXDxxx
EOF
T -qabcd <<"EOF"
0	/abxcCdxx/AbxcCdxx
1	/abxcCdxx/XxXXDxxx
EOF
T -qabcx <<"EOF"
0	/abxcCdxx/XxXXDxxx
-	/abxcCdxx/AbxcCdxx
EOF

T -qabcd <<"EOF"
0	xxxxxxxxxxxxxxxxxxxxxxxxxx Abxxxx Cxxxxxxxx Dxxxxxxxx
-	axxxxbxx cxxxx dx xxxxx axxxxbxx cxxxx dx
EOF

T -qabcde <<"EOF"
0	AbcxxxxDexxxxx
-	AbcxxxxXdexxx
EOF
T -qabcde <<"EOF"
0	AbcxxxxDexxxxx
1	AbcxxxxXDexxx
EOF

T -qabac <<"EOF"
0	/abxxXxxx/acxx
1	/xxxxAbxx/acxx
EOF

T -qabc <<"EOF"
0	AxxxxxBcxxx
1	AxxxxxBcxCxxx
2	AxxxxxBcxxxCxxx
EOF

T -qabc <<"EOF"
0	axx/xxxxxxxxxb/ABCxxxx.xxx
-	axx/xxxxa/xxx/xxx-bxx-xxxxxxxx-xxcxxxx
1	xxxxx/xxxx.abc
EOF
T -qabc <<"EOF"
0	axx/xxxxxxxxxb/ABCxxxx.xxx
1	xxxxx/xxxx.abc
-	xax/xxxxa/xxx/xxx-bxx-xxxxxxxx-xxcxxxx
EOF
#  ^-- Not at high bonus position.

T -qaba <<"EOF"
0	xxxxxxxxxxxx/AxxxBxxxxxAxxxx
-	axxxb/xxx/axxx
EOF

! T -qm <<EOF
-	$esc[xxxm
EOF
! T -qa <<EOF
-	$esc[axxm
EOF

T -qab <<EOF
0	a$esc[xxxxxxxxxxmbx
1	axxxxxxxxx.bx
-	axxxxxxxxxxbx
EOF

T -qa <<"EOF"
0	xxx	a	xxx
1	xxaxx/axx/Axx
EOF

T -qab <<"EOF"
0	xx	ax	bx	x
1	xx	ab	xx	xx
EOF

# T -qabca <<"EOF"
# 0	./xxx/xxxxxxxxbx/AxbxBxxxxCxbxAxbxxxx.bxx
# 1	./xxaxxxxaxxxx/@bxxbxxx-xxxxxxx/axx/bxxxx/cxxb-xxx.a.bx
# EOF

T -qabc <<"EOF"
0	/axxxx/bcxxdXx
1	/abcDx
EOF
T -qabcd <<"EOF"
0	/abcDx
-	/axxxx/bcxxdXx
EOF

# Prefer shorter.
T -qa <<"EOF"
0	/axb
2	/axxxb
1	/axxb
3	/axxxxb
EOF
T -qab <<"EOF"
0	/a/b
2	/axx/b
1	/ax/b
3	/axxx/b
EOF
# Prefer shorter gap.
T -qab <<"EOF"
0	/a/bxxx
2	/axx/bx
1	/ax/bxx
3	/axxx/b
EOF

T -qab <<"EOF"
0	AbxxD
1	AbxxbD
EOF
T -qabd <<"EOF"
0	AbxxD
1	AbxxbD
EOF

T -qabcd <<"EOF"
0	abcDxxxDxxxx
-	abcXxxxxXddxxx
EOF

T -qab <<"EOF"
0	axxxbxxx	Ab
1	xxxxxxxxxx axx xxx bxxx
EOF

T -qabc <<"EOF"
0	/AxxBcxxx
1	/AxxBcxxxCxxx
EOF

printf '%d\t%*s\n' 0 100 '' 1 1000 '' 2 10000 '' |
tr ' ' 'A' |
T -qaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa
printf '%d\tX%*s\n' 0 100 '' 1 1000 '' 2 10000 '' |
tr ' ' 'A' |
T -qaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa

! T -qab <<"EOF"
-	xb
EOF

T -qa <<"EOF"
0	abcd
1	a	b	c	d
EOF
for x in ab abc abcd; do
	T -q$x <<"EOF"
0	a	b	c	d
1	abcd
EOF
done
